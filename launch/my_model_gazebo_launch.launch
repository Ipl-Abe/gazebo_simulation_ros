<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="rvizconfig" default="$(find gazebo1_lecture)/rviz/tracked_box.rviz" />
  <arg name="model" default="$(find gazebo_simulation_ros)/urdf/mycobot_280_m5.urdf" />
  <arg name="xacro_option" default="" />
  <arg name="robot_namespace" default="" />

  <arg name="x0" default="0" />
  <arg name="y0" default="0" />
  <arg name="z0" default="0" />

  <arg name="have_hardware" default="true" />
  
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="my_world.world"/>
    <arg name="use_sim_time" value="true"/>
  </include>

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model myCobot -param robot_description -x $(arg x0) -y $(arg y0) -z $(arg z0)" />

  <!-- Publish robot's link & joint status -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro '$(arg model)' gazebo_plugin:=true
            robot_namespace:='$(arg robot_namespace)'
            $(arg xacro_option)" />

  <include file="$(find gazebo_simulation_ros)/launch/mycobot_fake_control.launch" />

  <!-- If you don't have hardware, specify --> 
  <group if="$(arg have_hardware)">
    <!-- run the mycobot hardwre interface-->
    <node name="mycobot_hardware_interface" pkg="gazebo_simulation_ros" type="mycobot_hardware_interface.py" />
  </group>

  <!-- run the rqt_joint_trajectory_controller for mycobot -->
  <node name="rqt_joint_trajectory_controller" pkg="rqt_joint_trajectory_controller" type="rqt_joint_trajectory_controller" />

  <!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" /> -->
</launch>